class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        int left =0;
        int right = 1;

        while(right < nums.length){
        while (right < nums.length && Math.abs(right - left)<=k){

            if (nums[left]==nums[right]) return true;

            right+=1;

        }
            left+=1;
            right= left+1;
        }
    return false;
    }
}


class Solution2 {
    public boolean containsNearbyDuplicate(int[] nums, int k) {

        Set<Integer> set = new HashSet<>();
            int left = 0;
        for (int right = 0; right < nums.length; right ++){


            while (right - left > k){
                set.remove(nums[left]);
                left+=1;
            }

            if (set.contains(nums[right])) return true;
            set.add(nums[right]);
        }
        
        return false;
    }
}