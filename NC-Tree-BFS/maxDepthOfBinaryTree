/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public int maxDepth(TreeNode root) {

        int height = 0;
        Queue<TreeNode>  q = new LinkedList<>();
         if (root != null) {
            q.add(root);
        }
        while(!q.isEmpty()){

        int length = q.size();

        for(int i =0 ; i< length ; i++){

            TreeNode tree  = q.poll();
               if(tree.left != null) q.add(tree.left);
                if(tree.right != null) q.add(tree.right);

        }
            height+=1;

        }
        return height;
    }
}
