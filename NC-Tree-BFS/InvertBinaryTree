/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public TreeNode invertTree(TreeNode root) {

        Queue<TreeNode> q = new LinkedList<>();

        if(root!=null) q.offer(root);

        while(!q.isEmpty()){

            int length = q.size();

            for(int i=0 ; i < length; i++){

                TreeNode tree = q.poll();

                if(tree!=null){

                    if(tree.left!=null)q.offer(tree.left);
                    if(tree.right!=null)q.offer(tree.right);

                    TreeNode temp = tree.left;
                    tree.left = tree.right;
                    tree.right = temp;

                    

                }

            }


        }

    return root;

    }

}
