/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public boolean isValidBST(TreeNode root) {

        Queue<Object[]> q = new LinkedList<>();

        if(root!=null){
            
            q.offer(new Object[]{root, Integer.MIN_VALUE, Integer.MAX_VALUE});
        }

        
        while(!q.isEmpty()){

            Object[] o = q.poll();
            TreeNode current = (TreeNode)o[0];
            int left = (int)o[1];
            int right = (int)o[2];

            if(!((current.val > left) && (current.val < right))) return false;

            if(current.left!=null){
                q.offer(new Object[]{current.left, left, current.val});
            }

            
            if(current.right!=null){
                q.offer(new Object[]{current.right, current.val, right});
            }


        }
        return true;
    }
}
