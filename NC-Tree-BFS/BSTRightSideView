/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public List<Integer> rightSideView(TreeNode root) {

        List<Integer> result = new ArrayList<>();

        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);

        while(!q.isEmpty()){

            TreeNode r = null;
            int length = q.size();

            for(int i=0; i< length; i++){
                TreeNode node = q.poll();

                if(node!=null){
                    r = node;
                q.offer(r.left);
                q.offer(r.right);
                }
            }

            if(r!=null){
                result.add(r.val);
            }


        }
        return result;
        
    }
}
